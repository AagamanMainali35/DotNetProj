@page "/home"
@inject IUserService UserService
@inject TransactionService TransactionService
@using FinTrackPro.Models
@using FinTrackPro.Services
@using System.Linq
@using System.Diagnostics
@using FinTrackPro.Services.Interface
@using System.Diagnostics

<style>
    /* Sidebar */
    .sidebar {
        width: 230px;
        background-color: #B2C6B6;
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        padding: 40px 20px;
        box-sizing: border-box;
    }

        .sidebar .logo {
            width: 100px;
            height: 100px;
            margin: 0 auto 20px;
            display: flex;
            overflow: hidden;
            border-radius: 50%;
        }

            .sidebar .logo img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                border-radius: 50%;
            }

        .sidebar a {
            display: block;
            color: Black;
            text-decoration: none;
            margin: 30px 0;
            text-align: left;
            font-size: 22px;
            transition: background-color 0.3s ease;
            padding: 10px;
        }

            .sidebar a:hover {
                background-color: #a6944b;
                border-radius: 5px;
            }

            .sidebar a i {
                margin-right: 10px;
                font-size: 24px;
            }

    /* User Section */
    .balance-section {
        background-color: #e5f4e1;
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .balance-section:hover {
            transform: scale(1.02);
        }

        .balance-section h4 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .balance-section p {
            font-size: 18px;
            margin: 5px 0;
        }

    .add-balance-btn {
        background: linear-gradient(to right, #81c784, #388e3c);
        color: white;
        border: none;
        padding: 15px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 18px;
        width: 220px;
        margin-top: 15px;
    }

        .add-balance-btn:hover {
            background-color: #2c6e2d;
        }

    /* Transaction History */
    .transaction-history {
        margin-top: 30px;
        background-color: #f9f9f9;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .transaction-history h4 {
            font-size: 22px;
            margin-bottom: 20px;
        }

        .transaction-history table {
            width: 50rem;
            border-collapse: collapse;
        }

        .transaction-history th, .transaction-history td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .transaction-history th {
            background-color: #f2f2f2;
        }

        .transaction-history tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .transaction-history tr:hover {
            background-color: #f1f1f1;
        }

        .transaction-history .highlight {
            background-color: #f8d7da;
        }

    /* Modal */
    .modal {
        display: @modalDisplay;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        width: 300px;
    }

    .modal h4 {
        margin-bottom: 20px;
    }

    .modal input {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border-radius: 5px;
        border: 1px solid #ddd;
        font-size: 16px;
    }

    .modal button {
        background-color: #388e3c;
        color: white;
        border: none;
        padding: 10px;
        cursor: pointer;
        width: 100%;
        border-radius: 8px;
    }

        .modal button:hover {
            background-color: #2c6e2d;
        }

    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 10px;
    }
</style>

<!-- Sidebar Content -->
<div class="sidebar">
    <div class="logo">
        <img src="Images/fintrackpro-high-resolution-logo.png" alt="Logo" />
    </div>
    <a href="/home"><i class="fas fa-home"></i>Home</a>
    <a href="/transaction"><i class="fas fa-credit-card"></i>Transactions</a>
    <a href="/debts"><i class="fas fa-clipboard-list"></i>Debts</a>
    <a href="/"><i class="fas fa-sign-out-alt"></i>Log Out</a>
</div>

<!-- Balance Section -->
<div class="balance-section">
    <h4>Hello, User</h4>
    <p>Balance: $@currentBalance</p> <!-- Displaying the current balance -->
    <p>Date: @DateTime.Now.ToString("MMMM dd, yyyy")</p>

    <button class="add-balance-btn" @onclick="OpenModal">Add Balance</button>
</div>

<!-- Transaction History Section -->
<h4>Upcoming Payables</h4>
<div class="transaction-history">
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Description</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in upcomingTransactions)
            {
                <tr class="@((upcomingTransactions.IndexOf(transaction) < 5 ? "highlight" : ""))">
                    <td>@transaction.Date.ToString("yyyy-MM-dd")</td>
                    <td>@transaction.Label</td>
                    <td>@transaction.Amount</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal for Adding Balance -->
<div class="modal" style="display:@modalDisplay">
    <div class="modal-content">
        <h4>Add Balance</h4>
        <input type="number" @bind="amountToAdd" placeholder="Enter amount" min="0" />
        <button @onclick="AddBalance">Add Balance</button>
        <button @onclick="CloseModal">Cancel</button>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="error-message">@errorMessage</p>
        }
    </div>
</div>

@code {
    private string modalDisplay = "none"; // To control modal visibility
    private int amountToAdd = 0;
    private int currentBalance;
    private string errorMessage = string.Empty; // Error message
    private List<TransactionModel> upcomingTransactions = new List<TransactionModel>();

    protected override void OnInitialized()
    {
        currentBalance = UserService.GetUserBalance();
        upcomingTransactions = TransactionService.GetAllTransactions()
            .Where(t => t.type != "credit" && t.Date > DateTime.Now) // Exclude 'credit' transactions
            .OrderBy(t => t.Date)  // Sort by date for upcoming transactions
            .Take(5)  // Show only the top 5 upcoming transactions
            .ToList();
    }

    private void OpenModal()
    {
        modalDisplay = "flex";
    }

    private void CloseModal()
    {
        modalDisplay = "none";
    }

    private void AddBalance()
    {
        // Validate if the amount is greater than zero
        if (amountToAdd <= 0)
        {
            errorMessage = "Amount must be greater than zero."; // Set error message
            return;
        }

        // Call the UpdateBalance method from IUserService to update the balance
        var success = UserService.addBalance(amountToAdd);
        if (success)
        {
            // Update the current balance after the transaction
            currentBalance += amountToAdd;
            CloseModal();
            errorMessage = string.Empty; // Clear the error message on success
        }
        else
        {
            // Handle the failure case (maybe show an error message)
            errorMessage = "Failed to add balance. Please try again."; // Set error message
        }
    }
}
