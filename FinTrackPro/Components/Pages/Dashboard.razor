@page "/dashboard"
@inject FinTrackPro.Services.TransactionService TransactionService
@using MudBlazor
<style>
    .sidebar {
    width: 230px;
    background-color: #B2C6B6;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    padding: 40px 20px;
    box-sizing: border-box;
    }
    .sidebar .logo {
    width: 100px;
    height: 100px;
    margin: 0 auto 20px;
    display: flex;
    overflow: hidden;
    border-radius: 50%;
    }
    .sidebar .logo img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    border-radius: 50%;
    }
    .sidebar a {
    display: block;
    color: Black;
    text-decoration: none;
    margin: 30px 0;
    text-align: left;
    font-size: 22px;
    transition: background-color 0.3s ease;
    padding: 10px;
    }
    .sidebar a:hover {
    background-color: #a6944b;
    border-radius: 5px;
    }

    .sidebar a i {
    margin-right: 10px;
    font-size: 24px;
    }
    .chart-container {
    padding: 20px;
    border-radius: 10px;
    background-color: #f9f9f9;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin: 20px auto;
    max-width: 90vw;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow-x: auto;
    margin-left: 50px; /* Added 50px margin */
    }
    .chart-title {
    text-align: center;
    color: #333;
    font-size: 28px;
    margin-bottom: 20px;
    }
    .chart-wrapper {
    width: 100%;
    max-width: 1500px;
    }
    .cards-container {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 20px;
    margin: 30px auto;
    max-width: 1600px;
    }
    .card {
    flex: 1 1 calc(25% - 20px);
    min-width: 200px;
    background-color: #B2C6B6;
    border-radius: 10px;
    padding: 20px;
    text-align: center;
    color: #333;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .card h3 {
    margin: 0;
    font-size: 24px;
    color: #444;
    }
    .card p {
    margin-top: 10px;
    font-size: 18px;
    color: #666;
    }
</style>
<div class="sidebar">
    <div class="logo">
        <img src="Images/fintrackpro-high-resolution-logo.png" alt="Logo" />
    </div>
    <a href="/home"><i class="fas fa-home"></i>Home</a>
    <a href="/transaction"><i class="fas fa-credit-card"></i>Transactions</a>
    <a href="/debts"><i class="fas fa-clipboard-list"></i>Debts</a>
    <a href="/dashboard"><i class="fas fa-dashboard"></i>DashBoard</a>
    <a href="/"><i class="fas fa-sign-out-alt"></i>Log Out</a>
</div>

<div class="chart-container">
    <h3 class="chart-title">Top 5 Transactions</h3>
    @if (BarSeries != null && BarSeries.Count > 0)
    {
        <div class="chart-wrapper">
            <MudChart ChartType="ChartType.Bar" ChartSeries="@BarSeries" XAxisLabels="@XAxisLabels" Width="50rem" Height="400px">
                <ChartOptions>
                    <MudChartOptions YAxisTicks="5" />
                </ChartOptions>
            </MudChart>
        </div>
    }
    else
    {
        <p style="text-align: center;">No data available</p>
    }
</div>

<!-- Cards Section -->
<div class="cards-container">
    <div class="card">
        <h3>Total Balance</h3>
        <p>$0.00</p>
    </div>
    <div class="card">
        <h3>Total Debt</h3>
        <p>$0.00</p>
    </div>
    <div class="card">
        <h3>Total Expense</h3>
        <p>@totalTransactionAmount</p>
    </div>
    <div class="card">
        <h3>Total Savings</h3>
        <p>$0.00</p>
    </div>
</div>

@code {
    // Chart data series
    public List<ChartSeries> BarSeries { get; set; } = new List<ChartSeries>();
    public string[] XAxisLabels { get; set; } = Array.Empty<string>();
    public int totalTransactionAmount;
   
    protected override void OnInitialized()
    {
        LoadTopTransactions();
        totalTransactionAmount = TransactionService.TotalTransaction();
    }

    /// <summary>
    /// Load top 5 transactions and populate the chart data
    /// </summary>
    private void LoadTopTransactions()
    {
        // Retrieve and process transactions
        var transactions = TransactionService.GetAllTransactions();
        if (transactions == null || !transactions.Any())
        {
            BarSeries = new List<ChartSeries>();
            XAxisLabels = Array.Empty<string>();
            return;
        }

        var filteredTransactions = transactions
            .OrderByDescending(t => t.Amount)
            .Take(5)
            .ToList();

        // Prepare data for the bar chart
        XAxisLabels = filteredTransactions.Select(t => t.Label).ToArray();
        var transactionAmounts = filteredTransactions.Select(t => (double)t.Amount).ToArray();

        BarSeries = new List<ChartSeries>
        {
            new ChartSeries
            {
                Name = "Top 5 Transactions",
                Data = transactionAmounts
            }
        };
    }
}
